plot(k22[1,])
plot(k22[1,], type='l')
for(i in 1:100){
k22[,i] = cal(k2*i/5)
}
plot(k22[1,], type='l')
cal(3)
cal(300)
cal(100)
cal(103)
for(i in 1:100){
k22[,i] = cal(k2+i/20)
}
plot(k22[1,], type='l')
for(i in 1:100){
k22[,i] = cal(k2+i/10)
}
plot(k22[1,], type='l')
for(i in 1:100){
k22[,i] = cal(k2+i/2)
}
plot(k22[1,], type='l')
cal(150)
cal(200)
plot(k22[1,], type='l', ylim=c(-4, 4), xlim=c(-20, 0))
lines(k22[2,], type='l', col='red')
k2=150
(k-k2)^2 + 4*m*z0*(k-k2)
library(imager)
finds = load.image('e:/6.003/findsmiley.jpg')
hist(finds)
finds[finds>0.5] = 1
finds[finds<0.5] = -1
a= c(1,2)
a[-1]
p = matrix(1, 7, 8)
p[2:6, 2:7] = -1
p[3, 3:5] = 1
p[5, 4] = 1
p[6, c(3,5)] = 1
plot(p)
image(p)
p
t(p)
p = matrix(1, 8, 7)
p[2:7, 2:6] = -1
p[3, 3:5] = 1
p[5, 4] = 1
p[6, c(3,5)] = 1
image(p)
p
p = p[8:1,]
image(p)
p
2dconvolve=function(x, p){
dims = x.dim()
y = matrix(0, dims[1:2])
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-6):i){
for(l in (j-7):j){
y[i,j] = y[i,j] + x[k,l]*p[i-k, k-l]
}
}
}
}
return(y)
}
2dconvolve=function(x, p){
dims = x.dim()
y = matrix(0, dims[1:2])
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-6):i){
for(l in (j-7):j){
y[i,j] = y[i,j] + x[k,l]*p[i-k, k-l]
}
}
}
}
return(y)
}
2dconvolve=function(x, p){
dims = dim(x)
y = matrix(0, dims[1:2])
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-6):i){
for(l in (j-7):j){
y[i,j] = y[i,j] + x[k,l]*p[i-k, k-l]
}
}
}
}
return(y)
}
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1:2])
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-6):i){
for(l in (j-7):j){
y[i,j] = y[i,j] + x[k,l]*p[i-k, k-l]
}
}
}
}
return(y)
}
y=convolve2d(finds,p)
dim(finds)
x=finds
dims = dim(x)
dims
y = matrix(0, dims[1:2])
dims[1:2]
y = matrix(0, dims=dims[1:2])
?matrix
y = matrix(0, dim=dims[1:2])
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-6):i){
for(l in (j-7):j){
y[i,j] = y[i,j] + x[k,l]*p[i-k, k-l]
}
}
}
}
return(y)
}
y = convolve2d(finds, p)
y = matrix(0, dims[1], dims[2])
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-6):i){
for(l in (j-7):j){
y[i,j] = y[i,j] + x[k,l]*p[i-k, k-l]
}
}
}
}
i
j
k
l
y[i, j] + x[k, l] * p[i - k, k - l]
i - k
k-l
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-8):(i-1)){
for(l in (j-7):(j-1)){
y[i,j] = y[i,j] + x[k,l]*p[i-k, k-l]
}
}
}
}
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-8):(i-1)){
for(l in (j-7):(j-1)){
y[i,j] = y[i,j] + x[k,l]*p[i-k, j-l]
}
}
}
}
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in dims[1]){
for (j in dims[2]){
for(k in (i-8):(i-1)){
for(l in (j-7):(j-1)){
y[i,j] = y[i,j] + x[k,l]*p[i-k, j-l]
}
}
}
}
return(y)
}
y = convolve2d(finds, p)
image(y)
y[1:2, 1:2]
range(y)
hist(y)
table(y)
image(finds)
image(finds[,,1,1])
y = convolve2d(finds, t(p))
p
y = convolve2d(finds, p[8:1, 7:1])
range(y)
p[8:1, 7:1]
y = convolve2d(finds, -p[8:1, 7:1])
range(y)
which(y==8)
dim(y)
range(dins)
range(finds)
range(p)
dim(p)
y = convolve2d(finds, p[, 7:1])
table(y)
y = convolve2d(finds, p[8:1,])
table(y)
y = convolve2d(-finds, p)
table(y)
which(y==8)
y[1024, 1024]
p
finds = load.image('e:/6.003/findsmiley.jpg')
table(finds)
p
finds[1010:1024, 1010:1024]
finds[1010:1024, 1010:1024]->wx
image(wx)
finds[finds>0.5] = 1
finds[finds<0.5] = -1
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 1:dims[1]){
for (j in 1:dims[2]){
for(k in (i-8):(i-1)){
for(l in (j-7):(j-1)){
y[i,j] = y[i,j] + x[k,l]*p[i-k, j-l]
}
}
}
}
return(y)
}
y = convolve2d(finds, p)
p
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 8:dims[1]){
for (j in 7:dims[2]){
y[i,j] = x[1:8+i, 1:7+j]*p
}
}
}
y = convolve2d(finds, p)
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 8:dims[1]){
for (j in 7:dims[2]){
y[i,j] = dot(x[1:8+i, 1:7+j],p)
}
}
}
y = convolve2d(finds, p)
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 8:dims[1]){
for (j in 7:dims[2]){
y[i,j] = sum(x[1:8+i, 1:7+j]*p)
}
}
}
y = convolve2d(finds, p)
p*p
1:8+10
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 8:(dims[1]-8)){
for (j in 7:(dims[2]-7)){
y[i,j] = sum(x[1:8+i, 1:7+j]*p)
}
}
}
y = convolve2d(finds, p)
dim(finds)
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 8:(dims[1]-8)){
for (j in 7:(dims[2]-7)){
y[i,j] = sum(x[1:8+i, 1:7+j,1,1]*p)
}
}
}
y = convolve2d(finds, p)
table(y)
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 8:(dims[1]-8)){
for (j in 7:(dims[2]-7)){
y[i,j] = sum(x[1:8+i, 1:7+j,1,1]*p)
}
}
table(y)
p
which(y==34)
which(y==34, arr.ind = T)
image(finds[198+1:8, 174+1:7])
image(finds[770+1:8, 428+1:7])
image(finds[295+1:8, 644+1:7])
p
image(p)
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 8:(dims[1]-8)){
for (j in 7:(dims[2]-7)){
y[i,j] = sum(x[1:8+i, 1:7+j,1,1]*p)
}
}
return(y)
}
y = convolve2d(finds, p[8:1,])
table(y)
which(y==38, arr.ind = T)
convolve2d = function(x, p){
dims = dim(x)
y = matrix(0, dims[1], dims[2])
for(i in 7:(dims[1]-7)){
for (j in 8:(dims[2]-8)){
y[i,j] = sum(x[1:7+i, 1:8+j,1,1]*p)
}
}
return(y)
}
y = convolve2d(finds, t(p))
table(y)
which(y==56, arr.ind = T)
image(x[1:20+762, 1:20+429])
x=1:100
y = 0.5+cos(0.3*x)+cos(0.6*x)+cos(0.9*x)+cos(1.2*x)
plot(y)
x=1:100
y=rep(0.5, 100)
for(i in 1:100){
y = y+cos(0.3*i*x)
}
plot(y)
y=rep(0.5, 100)
for(i in 1:500){
y = y+cos(0.3*i*x)
}
plot(y)
x=1:1000
y=rep(0.5, 1000)
for(i in 1:500){
y = y+cos(0.03*i*x)
}
plot(y)
y=rep(0.5, 1000)
for(i in 1:900){
y = y+cos(0.03*i*x)
}
plot(y)
y=rep(0.5, 1000)
for(i in 1:900){
y = y+cos(0.003*i*x)
}
plot(y)
y=rep(0.5, 1000)
for(i in 1:5000){
y = y+cos(0.03*i*x)
}
plot(y)
library('devtools')
library('roxygen2')
library(kodonz)
?dna2aa
x=0
x[1:10]
y=c(1,2)
?rep
rep_len(y, 5)
class(y)
data("CodonTable0")
cTable = CodonTable0
temp = table(cTable[,2])
temp
temp[temp==1]
names(temp[temp==1])
x
# arguments
x = CodonTable0[sample(1:64, 1e3,T),1]
table(x)[-'M']
table(x)
bin = numeric()
bin
temp1 = table(cTable[,2])
temp2 = names(temp1[temp1==1])
bin = numeric()
if(length(temp2)!=0){
for(i in 1:length(temp2)){
bin =c(bin, which(cTable[,2]==temp2[i]))
}
}
bin
bin = sapply(temp2,function(x){which(cTable[,2]==x)})
bin
sqns=x
x
table(sqns)[-bin]
y=1:3
y[-c(2,2,2)]
y
bin = c(bin, which(cTable[,2]=='*'))
bin
x = table(sqns)[-bin]
sapply(x, function(x){rep(names(x), x)})
x
names(x)
x[1]
sapply(x, function(i){rep(names(i), i)})
rep(names(x[1]), 2)
rep(names(x[1]), x[1])
length(x)
sapply(1:length(x), function(i){rep(names(x[i]), x[i])})
?sapply
sapply(1:length(x), function(i){rep(names(x[i]), x[i])}, simplify = T)
sapply(1:length(x), function(i){rep(names(x[i]), x[i])}, simplify = 'array')
unlist(sapply(1:length(x), function(i){rep(names(x[i]), x[i])}, simplify = 'array'))
ndc(x, 0, F)
source('E:/Dropbox/kodonz/R/util.r')
ndc(x, 0, F)
source('E:/Dropbox/kodonz/R/arg_check.r')
ndc(x, 0, F)
attr('class', x) <- 'KZsqns'
attr(x[[i]], 'class') = 'KZsqns'
source('E:/Dropbox/kodonz/R/util.r')
ndc(x, 0, F)
attr(x, 'class') = 'KZsqns'
ndc(x, 0, F)
source('E:/Dropbox/kodonz/R/util.r')
x
# arguments
x = CodonTable0[sample(1:64, 1e3,T),1]
attr(x, 'class') <- 'KZsqns'
ndc(x,0,F)
source('E:/Dropbox/kodonz/R/rm_ndc.r')
rm_ndc(list(x))
source('E:/Dropbox/kodonz/R/load.fasta.r')
setwd('E:/Dropbox/KZ/')
load.fasta(file='sample.fa')
load.fasta(file='sample.fa')
load.fasta(file='sample.fa')
load.fasta(file='sample.fa')->x
toupper(x)
source('E:/Dropbox/kodonz/R/load.fasta.r')
load.fasta(file='sample.fa')->x
x
library('devtools')
library('roxygen2')
setwd('e:/Dropbox/kodonz/')
detach('package:kodonz')
document()
setwd('..')
install('kodonz')
library(kodonz)
rm(load.fasta)
?data.frame
y=list(x=x)
y$x
y.x
y=1:10
y[1:10]
y[-1]
?order
order(y)
y=c(3,2,54,23,6,43)
order(y)
setwd('e:/Dropbox/kodonz/')
detach('package:kodonz')
document()
setwd('..')
install('kodonz')
library(kodonz)
x = CodonTable0[sample(1:64, 1e4,T),1]
attr(x, 'class') <- 'KZsqns'
s1=rscu(x)
s1
source('E:/Dropbox/kodonz/R/rscu.r')
setwd('e:/Dropbox/kodonz/')
detach('package:kodonz')
document()
setwd('..')
install('kodonz')
library(kodonz)
x = CodonTable0[sample(1:64, 1e4,T),1]
attr(x, 'class') <- 'KZsqns'
s1=rscu(x)
rm(rscu)
s1=rscu(x)
s1
s1$rscu
setwd('e:/Dropbox/kodonz/')
detach('package:kodonz')
document()
setwd('..')
install('kodonz')
library(kodonz)
x = CodonTable0[sample(1:64, 1e4,T),1]
attr(x, 'class') <- 'KZsqns'
s1=rscu(x)
s1
setwd('e:/Dropbox/kodonz/')
detach('package:kodonz')
document()
